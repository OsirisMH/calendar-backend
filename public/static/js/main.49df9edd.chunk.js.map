{"version":3,"sources":["reportWebVitals.js","types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/convertEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","convertEvents","e","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","checkingFinish","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","isLoginIn","setIsLoginIn","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPasswordConfirm","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","onClick","Navbar","useSelector","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","startDate","setStartDate","setEndDate","formValues","setFormValues","isTitleValid","setIsTitleValid","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","borderRadius","opacity","display","color","backgroundColor","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","NotificationManager","error","height","width","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49df9edd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const types = {\n\n    uiOpenModal: '[ui] Open Modal',\n    uiCloseModal: '[ui] Close Modal',\n\n    eventStartAddNew: '[event] Start Add New',\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add New',\n    eventClearActiveEvent: '[event] Clear Active Event',\n    eventUpdated: '[event] Updated',\n    eventDeleted: '[event] Deleted',\n    eventLoaded: '[event] Events Loaded',\n    eventClear: '[event] Clear Events',\n\n    authCheckingFinish: '[auth] Finish Checking Login State',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start Token Renew',\n    authLogout: '[auth] Logout',\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n\n};\n\nexport const uiReducer = ( state = initialState, action ) => {\n    switch ( action.type ){\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            };\n        default:\n            return state;\n    }\n};","// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'José Sicaeros'\n//     }\n// }\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            };\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    event => ( event.id === action.payload.id ) ? action.payload : event\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    event => ( event.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n        case types.eventClear:\n            return {\n                ...initialState\n            }\n        default:\n            return state;\n    };\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n};\n\nexport const authReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case  types.authLogout:\n            return {\n                checking: false\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers } from \"redux\";\n\nimport { uiReducer } from \"./uiReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { authReducer } from \"./authReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n});","import { compose, createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { useState } from \"react\";\n\nexport const useForm = ( initialState = {}) => {\n\n    const [values, setValues] = useState( initialState );\n\n    const reset = () => {\n        setValues(initialState);\n    };\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        })\n    };\n    \n    return [ values, handleInputChange, reset ];\n};","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:400'/api/event\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    }\n    else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n};\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:400'/api/event\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    }\n    else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n};\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n};","import moment from 'moment';\r\n\r\nexport const convertEvents = ( events = [] ) => {\r\n    return events.map( e => ({\r\n        ...e,\r\n        end: moment( e.end ).toDate(),\r\n        start: moment( e.start ).toDate(),\r\n    }));\r\n\r\n};","import Swal from \"sweetalert2\";\n\nimport { convertEvents } from \"../helpers/convertEvents\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = ( event ) => {\n    return async ( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                dispatch( eventAddNew( event ) );\n            }   \n        }\n        catch( error ) {\n            console.log( error );\n        }\n    }\n};\n\nconst eventAddNew = ( event ) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = ( event ) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdate = ( event ) => {\n    return async ( dispatch ) => {\n        try {\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ){\n                dispatch( eventUpdated( event ) );\n            }\n            else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        }\n        catch(error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if (body.ok){\n                dispatch( eventDeleted() );\n            }\n            else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        }\n        catch(error){\n            console.log(error);\n        }\n    };\n};\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async ( dispatch ) => {\n        try {\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n            \n            const events = convertEvents( body.events );\n            dispatch( eventLoaded( events ) );\n        }\n        catch(error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventsClear = () => ({ type: types.eventClear });","import Swal from \"sweetalert2\";\nimport { NotificationManager } from 'react-notifications';\n\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { eventsClear } from \"./events\";\nimport { types } from \"../types/types\";\n\nexport const startLogin = ( email, password ) => {\n    return async ( dispatch ) => {\n        try {\n            const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                localStorage.setItem( 'token', body.token );\n                localStorage.setItem('token-init-date', new Date().getTime() );\n                \n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));\n            }\n            else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        }\n        catch {\n\n        }\n    }\n};\n\nexport const startRegister = ( name, email, password ) => {\n    return async ( dispatch ) => {\n        try {\n            const resp = await fetchSinToken( 'auth/new', { name, email, password }, 'POST' );\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                localStorage.setItem( 'token', body.token );\n                localStorage.setItem('token-init-date', new Date().getTime() );\n                \n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));\n            }\n            else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        }\n        catch {\n\n        }\n    }\n};\n\nexport const startChecking = () => {\n    return async ( dispatch ) => {\n        try {\n            const resp = await fetchConToken( 'auth/renew' );\n            const body = await resp.json();\n        \n            if ( body.ok ) {\n                localStorage.setItem( 'token', body.token );\n                localStorage.setItem('token-init-date', new Date().getTime() );\n                \n                dispatch( login({\n                    uid: body.uid,\n                    name: body.name\n                }));\n            }\n            else {\n                dispatch( checkingFinish() );\n                if ( body.msg === 'Token no válido'){\n                    NotificationManager.error( 'Session expired', 'Error' );\n                }\n            }\n        }\n        catch {\n            dispatch( checkingFinish() );\n        }\n    }\n};\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n        localStorage.clear();\n        dispatch( eventsClear() );\n        dispatch( logout() );\n    };\n};\n\nconst logout = () => ({ type: types.authLogout });","import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\n\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\n\nimport { startLogin, startRegister } from '../../actions/auth';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [isLoginIn, setIsLoginIn] = useState( true );\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        loginEmail: 'oamh09@gmail.com',\n        loginPassword: 'Ganyu00'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        registerName: 'Asthar',\n        registerEmail: 'azrho07@gmail.com',\n        registerPassword: '123456',\n        registerPasswordConfirm: '123456'\n    });\n\n    const {loginEmail, loginPassword } = formLoginValues;\n\n    const { registerName, registerEmail, registerPassword, registerPasswordConfirm } = formRegisterValues;\n\n    const handleClickChange = () => {\n        setIsLoginIn( !isLoginIn );  \n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(loginEmail, loginPassword));\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( registerPassword !== registerPasswordConfirm ){\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\n        }\n        else {\n            dispatch(startRegister( registerName, registerEmail, registerPassword ));\n        }\n    };\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className={`col-md-6 login-form-1 mx-auto ${ !isLoginIn && 'd-none' }`}>\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"loginEmail\"\n                                value={ loginEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"loginPassword\"\n                                value={ loginPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n                <div className={ `col-md-6 login-form-2 mx-auto ${ isLoginIn && 'd-none' }` }>\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"registerName\"\n                                value={ registerName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"registerEmail\"\n                                value={ registerEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"registerPassword\"\n                                value={ registerPassword }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"registerPasswordConfirm\"\n                                value={ registerPasswordConfirm }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <button\n                className={ `btn ${ isLoginIn ? 'btn-primary' : 'btn-outline-primary' } btn-block mt-2 mx-auto w-25` }\n                onClick={ handleClickChange }\n            >\n                { (isLoginIn) ? \"Register\" : \"Login\" }\n            </button>\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    };\n    \n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }    \n            >\n                <i className=\"fas fa-sign-out-alt pr-2\"></i>\n                <span>Salir</span>\n            </button>\n        </div>\n    )\n};\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <span>{ title }</span>\n            <strong> - { user.name }</strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n};\n\nexport const CalendarModal = () => {\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    \n\n    const dispatch = useDispatch();\n\n    const [startDate, setStartDate] = useState( now.toDate() );\n    const [, setEndDate] = useState( nowPlus1.toDate() );\n    const [formValues, setFormValues] = useState( initEvent );\n    const [isTitleValid, setIsTitleValid] = useState( true );\n\n    const { title, notes, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        }\n        else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues]);\n\n    const closeModal = () => {\n        //TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n        setStartDate( now.toDate() );\n        setEndDate( nowPlus1.toDate() );\n    };\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();  \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 1 ){\n            return setIsTitleValid( false );\n        }\n\n        //TODO: realizar grabación en base de datos\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate(formValues) );\n        }\n        else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n        setIsTitleValid( true );\n        closeModal();\n    };\n\n    const handleStartDateChange = (e) => {\n        setStartDate( e );\n        setFormValues({ ...formValues, start: e });\n    };\n\n    const handleEndDateChange = (e) => {\n        setEndDate( e );\n        setFormValues({ ...formValues, end: e });\n    };\n    \n    return (\n        <Modal\n            isOpen={ modalOpen }\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            closeTimeoutMS={ 200 }\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ start }\n                        className='form-control'\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ end }\n                        minDate={ startDate }\n                        className='form-control'\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !isTitleValid && 'is-invalid' }` }\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    )\n};\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    \n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    };\n    \n    \n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n};\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n    \n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    };\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash pr-2\"></i>\n            <span>Eliminar evento</span>\n        </button>\n    )\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es-mx';\n\nmoment.locale('es-mx');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen =  () => {\n    const dispatch = useDispatch();\n    // TODO: leer los eventos del store\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        dispatch( eventStartLoading() );\n    }, [dispatch]);\n\n    const onDoubleClick = (e) => {\n        dispatch( uiOpenModal() );\n    };\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive(e) );\n    };\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    };\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        const style = {\n            borderRadius: '0px',\n            opacity: '0.8',\n            display: 'block',\n            color: 'white',\n            backgroundColor: ( uid === event.user._id ) ? '#d51c30' : '#2bd32e'\n        };\n        return { style };\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch( eventClearActiveEvent() );\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                onView={ onViewChange }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n            \n            <AddNewFab />\n            {\n                ( activeEvent ) && <DeleteEventFab />\n            }\n\n            <CalendarModal />\n        </div>\n    )\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                ? <Component { ...props } /> \n                : <Redirect to=\"/\" />\n            )}\n        />\n    )\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                ? <Component { ...props } /> \n                : <Redirect to=\"/login\" />\n            )}\n        />\n    )\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport ReactLoading from 'react-loading';\nimport NotificationContainer from 'react-notifications/lib/NotificationContainer';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nimport { startChecking } from '../actions/auth';\n\nimport '../styles.css';\nimport 'react-notifications/lib/notifications.css';\n\nexport const AppRouter = () => {\n    \n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth)\n    \n    useEffect(() => {\n        dispatch( startChecking() );\n    }, [dispatch]);\n\n    if ( checking ) {\n        return (\n            <div className=\"loadingContainer\">\n                <ReactLoading\n                    type=\"spin\"\n                    color=\"#0062cc\"\n                    height={80}\n                    width={80}\n                    className=\"loading\"\n                />\n                <h5>Loading...</h5>\n            </div> \n        );\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={ CalendarScreen }\n                        isAuthenticated={ !!uid }\n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n                <NotificationContainer />\n            </div>\n        </Router>\n    )\n};\n","import React from 'react';\nimport { Provider } from 'react-redux'\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}